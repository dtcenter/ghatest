name: Subset List Test

on:
  push:
  workflow_dispatch:
    inputs:
      subset:
        description: 'Comma-separated list of environments to skip. Leave blank to build all.'
        required: false

env:
  SKIP_LIST: 'two   four'

jobs:
  skip:
    runs-on: ubuntu-latest
    steps:
      - uses: jungwinter/split@v2
        id: split
        with:
          msg: ${{ env.SKIP_LIST }}
      - id: combine
        run: |
          skip_str=${{ env.SKIP_LIST }}
          arr=()
          echo $skip_str
          val=$(echo $skip_str | awk '{print $1}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $2}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $3}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $4}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $5}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $6}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $7}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $8}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $9}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $10}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $11}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $12}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $13}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $14}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $15}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $16}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $17}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $18}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $19}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $20}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $21}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $22}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $23}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $24}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $25}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $26}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $27}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $28}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $29}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          val=$(echo $skip_str | awk '{print $30}'); if [ ! -z "$val" ]; then arr[${#arr[@]}]=$val; fi
          echo "skip_list=$arr" >> $GITHUB_OUTPUT
          echo ${arr[@]}
    outputs:
      skip_list: ${{ steps.combine.outputs.skip_list }}
  one:
    runs-on: ubuntu-latest
    needs: [skip]
    steps:
      - name: Run
        run: echo ran this one!
      - run: echo ${{ needs.skip.outputs.skip_list }}

  two:
    runs-on: ubuntu-latest
    needs: [skip,one]
    steps:
      - name: Run
        run: echo ran this one!

  three:
    runs-on: ubuntu-latest
    needs: [skip,one]
    steps:
      - name: Run
        run: echo ran this one!

  four:
    runs-on: ubuntu-latest
    needs: [skip]
    steps:
      - name: Run
        run: echo ran this one!

  five:
    runs-on: ubuntu-latest
    needs: [skip,three]
    steps:
      - name: Run
        run: echo ran this one!

name: Subset List Test

on:
  push:
  workflow_dispatch:
    inputs:
      subset:
        description: 'Comma-separated list of environments to skip. Leave blank to build all.'
        required: false

env:
  SKIP_LIST: 'two_again   four'

jobs:
  skip:
    runs-on: ubuntu-latest
    steps:
      - uses: jungwinter/split@v2
        id: split
        with:
          msg: ${{ env.SKIP_LIST }}
      - id: combine
        run: |
          skip_str="${{ env.SKIP_LIST }}"
          IFS=', ' read -r -a arr <<< "$skip_str"
          if [ -z "$arr" ]; then echo "no_skip=true" >> $GITHUB_OUTPUT; exit 0; fi
          echo "no_skip=false" >> $GITHUB_OUTPUT;
          JSON="["
          for item in ${arr[@]}; do JSON="$JSON\"$item\","; done
          if [[ $JSON == *, ]]; then JSON="${JSON%?}"; fi
          JSON="$JSON]"
          echo "run_list=$( echo "$JSON" )" >> $GITHUB_OUTPUT
          echo ${JSON}
    outputs:
      no_skip: ${{ steps.combine.outputs.no_skip }}
      run_list: ${{ steps.combine.outputs.run_list }}
  one:
    runs-on: ubuntu-latest
    needs: [skip]
    if: always() && (${{ needs.skip.outputs.no_skip == 'true' }} || ${{ contains(fromJSON(needs.skip.outputs.run_list), 'one') }})
    steps:
      - name: Run
        run: echo ran this one!
      - run: echo ${{ contains(fromJSON(needs.skip.outputs.run_list), 'one') }}
      - run: echo ${{ needs.skip.outputs.no_skip }}
      - run: echo ${{ needs.skip.outputs.no_skip == 'true' }}
      - run: echo ${{ needs.skip.outputs.no_skip == 'false' }}

  two:
    runs-on: ubuntu-latest
    needs: [skip,one]
    if: always() && ${{ needs.skip.outputs.no_skip == 'true' }} || ${{ contains(fromJSON(needs.skip.outputs.run_list), 'two') }}
    steps:
      - name: Run
        run: echo ran this one!
      - run: echo ${{ contains(fromJSON(needs.skip.outputs.run_list), 'two') }}

  three:
    runs-on: ubuntu-latest
    needs: [skip,one]
    if: always() && ${{ needs.skip.outputs.no_skip == 'true' }} || ${{ contains(fromJSON(needs.skip.outputs.run_list), 'three') }}
    steps:
      - name: Run
        run: echo ran this one!
      - run: echo ${{ contains(fromJSON(needs.skip.outputs.run_list), 'three') }}

  four:
    runs-on: ubuntu-latest
    needs: [skip]
    if: always() && ${{ needs.skip.outputs.no_skip == 'true' }} || ${{ contains(fromJSON(needs.skip.outputs.run_list), 'four') }}
    steps:
      - name: Run
        run: echo ran this one!
      - run: echo ${{ contains(fromJSON(needs.skip.outputs.run_list), 'four') }}

  five:
    runs-on: ubuntu-latest
    needs: [skip,three]
    if: always() && ${{ needs.skip.outputs.no_skip == 'true' }} || ${{ contains(fromJSON(needs.skip.outputs.run_list), 'five') }}
    steps:
      - name: Run
        run: echo ran this one!
      - run: echo ${{ contains(fromJSON(needs.skip.outputs.run_list), 'five') }}

  two_again:
    runs-on: ubuntu-latest
    needs: [skip,one]
    if: always() && ${{ needs.skip.outputs.no_skip == 'true' }} || ${{ contains(fromJSON(needs.skip.outputs.run_list), 'two_again') }}
    steps:
      - name: Run
        run: echo ran this one!
      - run: echo ${{ contains(fromJSON(needs.skip.outputs.run_list), 'two_again') }}

  six:
    runs-on: ubuntu-latest
    needs: [skip,two_again]
    if: always() && ${{ needs.skip.outputs.no_skip == 'true' }} || ${{ contains(fromJSON(needs.skip.outputs.run_list), 'six') }}
    steps:
      - name: Run
        run: echo ran this one!
      - run: echo ${{ contains(fromJSON(needs.skip.outputs.run_list), 'six') }}

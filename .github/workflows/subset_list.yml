name: Subset List Test

on:
  push:
  workflow_dispatch:
    inputs:
      subset:
        description: 'Comma-separated list of environments to skip. Leave blank to build all.'
        required: false

env:
  SKIP_LIST: 'two_again   four'

jobs:
  skip:
    runs-on: ubuntu-latest
    steps:
      - uses: jungwinter/split@v2
        id: split
        with:
          msg: ${{ env.SKIP_LIST }}
      - id: combine
        run: |
          skip_str="${{ env.SKIP_LIST }}"
          IFS=', ' read -r -a arr <<< "$skip_str"
          echo "skip_list2=$arr" >> $GITHUB_OUTPUT
          JSON="["
          for item in ${arr[@]}; do; JSON="$JSON\"$item\""; done
          if [[ $JSON == *, ]]; then; JSON="${JSON%?}"; fi
          echo "skip_list=$( echo "$JSON" )" >> $GITHUB_OUTPUT
          echo ${JSON}
    outputs:
      skip_list: ${{ steps.combine.outputs.skip_list }}
  one:
    runs-on: ubuntu-latest
    needs: [skip]
    steps:
      - name: Run
        run: echo ran this one!
      - run: echo ${{ contains(needs.skip.outputs.skip_list, 'one') }}

  two:
    runs-on: ubuntu-latest
    needs: [skip,one]
    steps:
      - name: Run
        run: echo ran this one!
      - run: echo ${{ contains(needs.skip.outputs.skip_list, 'two') }}

  three:
    runs-on: ubuntu-latest
    needs: [skip,one]
    steps:
      - name: Run
        run: echo ran this one!
      - run: echo ${{ contains(needs.skip.outputs.skip_list, 'three') }}

  four:
    runs-on: ubuntu-latest
    needs: [skip]
    steps:
      - name: Run
        run: echo ran this one!
      - run: echo ${{ contains(needs.skip.outputs.skip_list, 'four') }}

  five:
    runs-on: ubuntu-latest
    needs: [skip,three]
    steps:
      - name: Run
        run: echo ran this one!
      - run: echo ${{ contains(needs.skip.outputs.skip_list, 'five') }}

  two_again:
    runs-on: ubuntu-latest
    needs: [skip,one]
    steps:
      - name: Run
        run: echo ran this one!
      - run: echo ${{ contains(needs.skip.outputs.skip_list, 'two_again') }}
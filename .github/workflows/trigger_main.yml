name: Trigger METplus Workflow

on:
  push:
    branches:
      - develop
      - main_v**
      - main
    paths-ignore:
      - 'docs/**'
      - '.github/pull_request_template.md'
      - '.github/ISSUE_TEMPLATE/**'
      - '**/README.md'
      - '**/LICENSE.md'

jobs:
  trigger_metplus:
    name: Trigger METplus testing workflow
    runs-on: ubuntu-latest
    steps:
      - name: Print GitHub values for reference
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: 'dtcenter/METplus'
          ref: 'develop'
          path: 'METplus'
      - run: ls $GITHUB_WORKSPACE
      - id: get_version
        run: |
          version=$(python3 -c "from component_name import __version__; print(__version__)")
          echo "version=${version}" >> $GITHUB_OUTPUT
      - id: get_metplus_branch
        run: |
          repo=${{ github.repository }}
          repo=${repo#*/}
          echo repo is ${repo}
          version=${{ steps.get_version.outputs.version }}
          cmd="$GITHUB_WORKSPACE/METplus/metplus/component_versions.py -i METplotpy -v ${version} -o METplus -f main_v{X}.{Y}"
          echo $cmd
          metplus_branch=$($cmd)
          if [ -z "$(git -C $GITHUB_WORKSPACE/METplus branch -l ${metplus_branch} --format '%(refname:short)')" ]; then
            echo "METplus branch ${metplus_branch} does not exist yet"
            exit 1
          fi
          echo "metplus_branch=${metplus_branch}" >> $GITHUB_OUTPUT
      - run: |
          metplus_branch=${{ steps.get_metplus_branch.outputs.metplus_branch }}
          echo "Triggering workflow dispatch of ${metplus_branch}"
#      - uses: actions/github-script@v7
#        with:
#          github-token: ${{ secrets.METPLUS_BOT_TOKEN }}
#          script: |
#            await github.rest.actions.createWorkflowDispatch({
#              owner: 'dtcenter',
#              repo: 'METplus',
#              workflow_id: 'testing.yml',
#              ref: 'develop',
#              inputs: {
#                repository: '${{ github.repository }}',
#                ref: '${{ github.ref }}',
#                actor: '${{ github.actor }}',
#                sha: '${{ github.sha }}',
#                pusher_email: '${{ github.event.pusher.email }}'
#              },
#            });
